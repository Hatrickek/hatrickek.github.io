"use strict";(self.webpackChunkhatrickek_site=self.webpackChunkhatrickek_site||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"oxylus-first-game","metadata":{"permalink":"/blog/oxylus-first-game","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/oxylus-first-game/2023-03-19-oxylus-first-game.md","source":"@site/blog/oxylus-first-game/2023-03-19-oxylus-first-game.md","title":"Creating A Game With Oxylus","description":"I have decided to make a game with Oxylus to stress the engine, showcase the current features and find out what features I\'m missing and implement them as well.","date":"2023-03-19T00:00:00.000Z","formattedDate":"March 19, 2023","tags":[{"label":"blog","permalink":"/blog/tags/blog"}],"readingTime":1.87,"hasTruncateMarker":false,"authors":[{"name":"Hatrickek","url":"https://github.com/Hatrickek","imageURL":"https://avatars.githubusercontent.com/u/89982837?v=4","key":"Hatrickek"}],"frontMatter":{"slug":"oxylus-first-game","title":"Creating A Game With Oxylus","authors":["Hatrickek"],"tags":["blog"]},"nextItem":{"title":"Oxylus Engine - Introduction","permalink":"/blog/oxylus-engine-intro"}},"content":"I have decided to make a game with Oxylus to stress the engine, showcase the current features and find out what features I\'m missing and implement them as well.\\n\\nThe game is going to be a [1985 Cyclone](https://www.youtube.com/watch?v=umoy06tZVS0) remake in 3D. It looked simple and is enough to showcase almost all features\\nof the engine.\\nIn this blog post I will show the steps I have taken while making the game so it\'s going to be something like a tutorial you would read for known engines like Unity, Unreal etc.\\n\\nSo let us begin...\\n\\n# Project\\nNow first thing you will see when you launch the engine is going to be a project selection panel. First row is showing us the recent projects \\nI have opened and below that buttons to load or create projects with a file dialog.\\n![Project Selector](projects.png)\\n\\nProjects in Oxylus is just a yaml file specifying the name, start scene path, and asset directory:\\n\\n```yml \\nProject:\\n  Name: ProjectCyclone\\n  StartScene: \\"Scenes/Main.oxscene\\"\\n  AssetDirectory: \\"Assets\\"\\n```\\n\\n# Scene \\nNow we need assets to load for our scene. I have found a nice [helicopter model](https://sketchfab.com/3d-models/low-poly-helicopter-5bbed2de9baa4a13a7faa72653b78b64) \\nfrom sketchfab. You can just download, drag and drop it to the editor. Oxylus will load every mesh and materials then create parented entities according to gltf node.\\n![Scene](scene.png)\\n\\nAnd for now I will use a plane to have a ground. For the ground I will create a material and just make it have a green color. Then drag and drop it to the plane.\\n![Material](Material.gif)\\n\\n# Systems\\nWhen we edit scenes seeing the result directly on runtime is very useful. So for this reason I have created a `HotReloadableScene` system using Oxylus Core Systems and Oxylus Event System.\\n\\nSystems can be added to the engine while creating the application:\\n\\n```cpp\\nconst auto app = new ProjectCyclone(spec);\\napp->PushLayer(new ::ProjectCyclone::GameLayer())\\n    .AddSystem<HotReloadableScenes>(\\"Assets/Scenes/Main.oxscene\\");\\n```\\n\\nThen system event is handled on the `GameLayer` with `OnEvent` callback:\\n```cpp\\nbool GameLayer::OnSceneReload(ReloadSceneEvent&) {\\n  LoadScene();\\n  OX_CORE_INFO(\\"Scene reloaded.\\");\\n  return true;\\n}\\n\\nvoid GameLayer::OnEvent(Event& e) {\\n  EventDispatcher dispatcher(e);\\n  dispatcher.Dispatch<ReloadSceneEvent>(OX_BIND_EVENT_FN(GameLayer::OnSceneReload));\\n}\\n```\\n\\n`HotReloadableScene` is just a simple system that is checking the provided scene path to see if any change happened. \\n```cpp\\nif (last_write_time(m_ScenePath).time_since_epoch().count() != \\n    m_LastWriteTime.time_since_epoch().count()) {\\n  m_LastWriteTime = last_write_time(m_ScenePath);\\n  ReloadSceneEvent event;\\n  m_EventCallback(event);\\n}\\n```\\n  \\n# -- TO BE CONTINUED..."},{"id":"oxylus-engine-intro","metadata":{"permalink":"/blog/oxylus-engine-intro","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/oxylus-engine-intro/2023-01-15-oxylus-engine-intro.md","source":"@site/blog/oxylus-engine-intro/2023-01-15-oxylus-engine-intro.md","title":"Oxylus Engine - Introduction","description":"My own engine I have been working on since 2022-06 in my free time. It first started as an OpenGL playground for me to learn graphics and systems programming but then I realised I won\'t go far with OpenGL and switched my whole engine to Vulkan in a month. And I started working on it more seriously instead of just treating it as a playground. Now it is a fully capable engine with an editor of creating good looking games with the complex renderer using techniques like Tiled Forward Rendering, PBR, PCF Shadows, SSAO, Bloom etc..","date":"2023-01-15T00:00:00.000Z","formattedDate":"January 15, 2023","tags":[{"label":"blog","permalink":"/blog/tags/blog"}],"readingTime":0.49,"hasTruncateMarker":false,"authors":[{"name":"Hatrickek","url":"https://github.com/Hatrickek","imageURL":"https://avatars.githubusercontent.com/u/89982837?v=4","key":"Hatrickek"}],"frontMatter":{"slug":"oxylus-engine-intro","title":"Oxylus Engine - Introduction","authors":["Hatrickek"],"tags":["blog"]},"prevItem":{"title":"Creating A Game With Oxylus","permalink":"/blog/oxylus-first-game"},"nextItem":{"title":"Why I Created This Blog","permalink":"/blog/why-i-created"}},"content":"My own engine I have been working on since 2022-06 in my free time. It first started as an OpenGL playground for me to learn graphics and systems programming but then I realised I won\'t go far with OpenGL and switched my whole engine to Vulkan in a month. And I started working on it more seriously instead of just treating it as a playground. Now it is a fully capable engine with an editor of creating good looking games with the complex renderer using techniques like Tiled Forward Rendering, PBR, PCF Shadows, SSAO, Bloom etc..\\n\\n![Oxylus Editor](OxylusEditor.png)"},{"id":"why-i-created","metadata":{"permalink":"/blog/why-i-created","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-01-14-first-blog-post.md","source":"@site/blog/2023-01-14-first-blog-post.md","title":"Why I Created This Blog","description":"Having a personal website is a great way to stay motivated and productive. By regularly updating my website with new blog posts,","date":"2023-01-14T00:00:00.000Z","formattedDate":"January 14, 2023","tags":[{"label":"blog","permalink":"/blog/tags/blog"}],"readingTime":0.625,"hasTruncateMarker":false,"authors":[{"name":"Hatrickek","url":"https://github.com/Hatrickek","imageURL":"https://avatars.githubusercontent.com/u/89982837?v=4","key":"Hatrickek"}],"frontMatter":{"slug":"why-i-created","title":"Why I Created This Blog","authors":["Hatrickek"],"tags":["blog"]},"prevItem":{"title":"Oxylus Engine - Introduction","permalink":"/blog/oxylus-engine-intro"}},"content":"Having a personal website is a great way to stay motivated and productive. By regularly updating my website with new blog posts,\\nI am able to share my process and techniques with others, which in turn inspires me to work harder and finish projects that I have started.\\n\\nAdditionally, writing about my work helps me to be more creative and generate new ideas. By documenting my progress and explaining how I implemented certain features, \\nI\'m able to deepen my understanding of that subject matter since writing about it requires more knowledge than just implementing it.\\n\\nFurthermore, my website could serve as a platform to advertise my future projects, allowing me to share my ideas with a wider audience and reach new heights in my journey."}]}')}}]);