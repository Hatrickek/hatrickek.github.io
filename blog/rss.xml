<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Hatrickek Blog</title>
        <link>https://hatrickek.github.io/blog</link>
        <description>Hatrickek Blog</description>
        <lastBuildDate>Wed, 29 Mar 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Porting Oxylus To MacOS]]></title>
            <link>https://hatrickek.github.io/blog/oxylus-mac-port</link>
            <guid>https://hatrickek.github.io/blog/oxylus-mac-port</guid>
            <pubDate>Wed, 29 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[In the middle of the night the coolest Russian I have met a.k.a. Yugin thought of a great idea. His idea was to build Oxylus on]]></description>
            <content:encoded><![CDATA[<p>In the middle of the night the coolest Russian I have met a.k.a. Yugin thought of a great idea. His idea was to build Oxylus on
his macbook to see how many errors and problems he will face or if it was just going to build with no problems.<br>
<!-- -->Oh boy, were we clueless as hell.      </p><blockquote><p>Oh and if you think modern C++ is cross platform or just like to use the "modern" std features it has, this blog might change your thoughts on those topics ðŸ˜…. <a href="https://gist.github.com/bkaradzic/2e39896bc7d8c34e042b" target="_blank" rel="noopener noreferrer">Also that</a>.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="dependencies">Dependencies<a href="#dependencies" class="hash-link" aria-label="Direct link to Dependencies" title="Direct link to Dependencies">â€‹</a></h2><p>So he just cloned the repo and hit the build button first problem he encountered was of course the dependencies.<br>
<!-- -->Now everyone hates managing dependencies in C++. You can't find me a single person that likes to write CMake scripts to manage dependencies I bet. So people created alternatives like <a href="https://premake.github.io/" target="_blank" rel="noopener noreferrer">Premake</a> that uses Lua and simple syntax to make stuff easier which I have used until I have thought about porting Oxylus to Mac. The reason I stopped using it was because how it was limiting the user to specific tools i.e if you are on windows you had to use Visual Studio to build the project or XCode on Mac. The thing is these tools suck a lot.<br>
<!-- -->So I rewrote my old CMake scripts and added the small dependencies I have as submodules and automated the build. Now with this way these modules were easily buildable as cross platform (at least for mac and windows).<br>
<!-- -->I had couple more dependencies to make as submodule though which were PhysX, KTX and Vulkan. PhysX is a very painful library to manage and I didn't really like working with it so I just decided to ditch it entirely and switch to <a href="https://github.com/jrouwe/JoltPhysics" target="_blank" rel="noopener noreferrer">Jolt</a> in the future. <a href="https://github.com/KhronosGroup/KTX-Software" target="_blank" rel="noopener noreferrer">KTX</a> had the same issue, it was huge; the repo had 6 different projects inside of it so I had to think of a way to not add it as a submodule but still make it automated with CMake. For this yugin came up with a nice solution which was just downloading the repo as a shallow zip copy and extracting it into the vendor directory. Now this worked perfectly and it made me left with the last dependency to make crossplatform: Vulkan. It was the easiest to build since CMake already had functions just for Vulkan i.e. <a href="https://cmake.org/cmake/help/latest/module/FindVulkan.html" target="_blank" rel="noopener noreferrer">FindVulkan</a>.<br>
<!-- -->Now the project was ready to build on all platforms. Surely this was the only problem right?      </p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="modern-c">Modern C++<a href="#modern-c" class="hash-link" aria-label="Direct link to Modern C++" title="Direct link to Modern C++">â€‹</a></h2><p>Well, in my dreams... First error he had was coming from not so modern std function <code>std::ranges</code>. Now seeing this made me question how that was an issue. After a 2 minute google search I have found that it wasn't even <a href="https://developer.apple.com/forums/thread/719896" target="_blank" rel="noopener noreferrer">supported on mac clang</a>! Well thankfully I didn't use it that much so I rewrote the stuff I had wrote with it i.e. <code>ranges::view</code>
<code>ranges::find_if</code> etc.<br>
<!-- -->The next problem was similar. Now it was from <code>std::views</code>! Again <a href="https://stackoverflow.com/questions/73628848/is-the-stdviews-namespace-not-available-in-xcodes-c?rq=1" target="_blank" rel="noopener noreferrer">the same issue</a>. I had rewrite the code I have written with it. Surely this was all, right? Surely std is not that anti cross platform? Well you will be wrong.<br>
<!-- -->The infamous 'std::format' was my next enemy. With another short google search I found out that it was actually a big problem for every other platform and people had already made a miles better alternative called <a href="https://github.com/fmtlib/fmt" target="_blank" rel="noopener noreferrer">fmt</a> so I had to bring another dependency to my project for a feature that already exists in the std but is still not cross platform after 2 years it has been released. How NICE!
This was all the problems I had with standard library thankfully I didn't go crazy with modern C++ otherwise I'm sure this list would have had gone a lot longer.</p><p>My next and last stop was Vulkan. Since Vulkan is fairly cross platform and has verbose errors it was quite easy to run it on Mac with MoltenVK layer. Had to enable couple of layers and extension then bam it ran... Right? Nope. Molten was giving me a timeout error on some command buffer submission. Apparently I forgot to remove some semaphores on
my composite pipeline removed them aaand finally it was running. It only took us a couple of sleepless nights and tought us a great lesson...</p><p><img loading="lazy" src="https://cdn.discordapp.com/attachments/1022588581237248060/1090745806765699242/Annotation_2023-03-29_235941.png" alt="Result" class="img_ev3q"></p>]]></content:encoded>
            <category>blog</category>
        </item>
        <item>
            <title><![CDATA[Creating A Game With Oxylus]]></title>
            <link>https://hatrickek.github.io/blog/oxylus-first-game</link>
            <guid>https://hatrickek.github.io/blog/oxylus-first-game</guid>
            <pubDate>Sun, 19 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[I have decided to make a game with Oxylus to stress the engine, showcase the current features and find out what features I'm missing and implement them as well.]]></description>
            <content:encoded><![CDATA[<p>I have decided to make a game with Oxylus to stress the engine, showcase the current features and find out what features I'm missing and implement them as well.</p><p>The game is going to be a <a href="https://en.wikipedia.org/wiki/Cyclone_(video_game)" target="_blank" rel="noopener noreferrer">1985 Cyclone</a> remake in 3D. It looked simple and is enough to showcase almost all features
of the engine.
In this blog post I will show the steps I have taken while making the game so it's going to be something like a tutorial you would read for known engines like Unity, Unreal etc.</p><p>So let us begin...</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="project">Project<a href="#project" class="hash-link" aria-label="Direct link to Project" title="Direct link to Project">â€‹</a></h2><p>Now first thing you will see when you launch the engine is going to be a project selection panel. First row is showing us the recent projects
I have opened and below that buttons to load or create projects with a file dialog.
<img loading="lazy" alt="Project Selector" src="/assets/images/projects-b0b3986283f94cd186bd7383ea934f2a.png" width="1456" height="971" class="img_ev3q"></p><p>Projects in Oxylus is just a yaml file specifying the name, start scene path, and asset directory:</p><div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key atrule">Project</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">Name</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> ProjectCyclone</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">StartScene</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Scenes/Main.oxscene"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">AssetDirectory</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Assets"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="scene">Scene<a href="#scene" class="hash-link" aria-label="Direct link to Scene" title="Direct link to Scene">â€‹</a></h2><p>Now we need assets to load for our scene. I have found a nice <a href="https://sketchfab.com/3d-models/low-poly-helicopter-5bbed2de9baa4a13a7faa72653b78b64" target="_blank" rel="noopener noreferrer">helicopter model</a>
from sketchfab. You can just download, drag and drop it to the editor. Oxylus will load every mesh and materials then create parented entities according to gltf node.
<img loading="lazy" alt="Scene" src="/assets/images/scene-4f5ced15793fc365d964a742c0b91f70.png" width="1920" height="1048" class="img_ev3q"></p><p>And for now I will use a plane to have a ground. For the ground I will create a material and just make it have a green color. Then drag and drop it to the plane.
<img loading="lazy" alt="Material" src="/assets/images/Material-cc197c929ec15a8296c59330f7da4c0e.gif" width="1911" height="990" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="systems">Systems<a href="#systems" class="hash-link" aria-label="Direct link to Systems" title="Direct link to Systems">â€‹</a></h2><p>When we edit scenes seeing the result directly on runtime is very useful. So for this reason I have created a <code>HotReloadableScene</code> system using Oxylus Systems and Oxylus Event System.</p><p>Systems in Oxylus are inherited from the <code>System</code> interface.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">class</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">System</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">public</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">string Name</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">System</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">default</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">System</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">string name</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Name</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">move</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">~</span><span class="token function" style="color:#e6db74">System</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">default</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnInit</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Scene</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> scene</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnShutdown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">SetDispatcher</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">EventDispatcher</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> m_Dispatcher </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">protected</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  EventDispatcher</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> m_Dispatcher </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">nullptr</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Defining the <code>HotReloadableScene</code> system:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">HotReloadableScenes</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">using</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">namespace</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">filesystem</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">last_write_time</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">m_ScenePath</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">time_since_epoch</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">count</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token operator" style="color:#66d9ef">!=</span><span class="token plain"> m_LastWriteTime</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">time_since_epoch</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">count</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic">//File changed event</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    m_Dispatcher</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token generic-function function" style="color:#e6db74">trigger</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">ReloadSceneEvent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    m_LastWriteTime </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">last_write_time</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">m_ScenePath</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>m_Dispatcher-&gt;trigger&lt;ReloadSceneEvent&gt;();</code> is the way to simply trigger the <code>ReloadSceneEvent</code>. </p><p>System event is listened on the <code>GameLayer</code> with <code>OnAttach</code> callback:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">GameLayer</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnAttach</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">EventDispatcher</span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  dispatcher</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">sink</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">ReloadSceneEvent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">connect</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&amp;</span><span class="token generic-function generic class-name" style="color:#e6db74">GameLayer</span><span class="token generic-function generic class-name double-colon punctuation" style="color:#f8f8f2">::</span><span class="token generic-function generic class-name" style="color:#e6db74">OnSceneReload</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">*</span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">bool</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">GameLayer</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnSceneReload</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">ReloadSceneEvent</span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">LoadScene</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">OX_CORE_INFO</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Scene reloaded."</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then we add the system to the engine while creating the application:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> app </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ProjectCyclone</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">app</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token function" style="color:#e6db74">PushLayer</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token class-name" style="color:#e6db74">ProjectCyclone</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GameLayer</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">AddSystem</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">HotReloadableScenes</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Assets/Scenes/Main.oxscene"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" alt="HotReloadableScenes" src="/assets/images/HotReloadableScene-ea8864b84a193f928a9de98660364022.gif" width="1856" height="1080" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="gameplay">Gameplay<a href="#gameplay" class="hash-link" aria-label="Direct link to Gameplay" title="Direct link to Gameplay">â€‹</a></h2><p>Now we can start working on the gameplay part and prove otherwise the famous phrase about engine devs ðŸ˜›:    </p><blockquote><p>Give someone an engine and they'll make a game. Teach someone to make an engine and they'll never make anything.</p></blockquote><p>I will start with creating a simple helicopter system to move the helicopter. And make the propellers turn around itself.   </p><p>We can either use the <code>ScriptableEntity</code> way or use "raw" ecs. I have picked the raw ecs way since we don't need any callbacks
from the <code>ScriptableEntity</code> api.    </p><p>The component that will be added on helicopter entity.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">struct</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">HeliComponent</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> Speed </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">5.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> Fuel </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic">//1.0f = Full, 0.0f = Empty</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> Altitude </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>By using the same way we have declared an engine system in the last section we now declare a system for the Helicopter entites.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">HeliSystem</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Scene</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> scene</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token plain"> registery </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token plain">m_Registry</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> view </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> registery</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">view</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> entity </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> view</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> view</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">get</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">entity</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//Move horizontal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token class-name" style="color:#e6db74">Input</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetKeyDown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Key</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">W</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Speed </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Timestep</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetDeltaTime</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//Other keys</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//Move vertical</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token class-name" style="color:#e6db74">Input</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetKeyDown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Key</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">Q</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude </span><span class="token operator" style="color:#66d9ef">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.2f</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">-=</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Speed </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Timestep</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetDeltaTime</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token class-name" style="color:#e6db74">Input</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetKeyDown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Key</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">E</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">8.0f</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Speed </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Timestep</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetDeltaTime</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Fuel </span><span class="token operator" style="color:#66d9ef">-=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.1f</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">ImGui</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetIO</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">DeltaTime</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For rotating the propeller just getting the transform component and adding a constant value to y rotation would work for now. </p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> ent </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> Oxylus</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">Entity </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> entity</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> m_Scene</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">get</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">ent</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">GetChild</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">GetComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">Oxylus</span><span class="token generic-function generic class-name double-colon punctuation" style="color:#f8f8f2">::</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Rotation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">5.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Other gameplay element we could add is picking up crates from ground.<br>
<!-- -->Same way we have crated the heli system now we can create a system for crates.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> heliView </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token plain">m_Registry</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">view</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> crateView </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token plain">m_Registry</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">view</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> CrateComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> entity </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> crateView</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> crate</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> crateView</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">get</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> CrateComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">entity</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic">//a simple intersection check</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">constexpr</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> axisThreshold </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.5f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> heliEntity </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> heliView</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">heliTransform</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> heliView</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">get</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">heliEntity</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">abs</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">x </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> heliTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> axisThreshold</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">abs</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.2f</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> heliTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> axisThreshold</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">abs</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> heliTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> axisThreshold</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">CratesTaken </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> ent </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> Entity</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain">entity</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> scene</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token function" style="color:#e6db74">DestroyEntity</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">ent</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">break</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://cdn.discordapp.com/attachments/1022588581237248060/1088469165813268510/crates.gif" alt="Crates" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ui">UI<a href="#ui" class="hash-link" aria-label="Direct link to UI" title="Direct link to UI">â€‹</a></h2><p>For creating a game UI we can use <code>OxUI</code> api which uses Dear ImGui underneath for drawing and layouts.
Cyclone has a HUD that contains instrumentation which includes speed, altitude, fuel remaining and time remaining.
Additionally there is also information on the number of supply crates, whether the player's current view is North
or South, information on wind force and a warning to the player of the cyclone's proximity and any approaching planes.<br>
<!-- -->For now I will just display altitude, remaining fuel and time.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">BeginUI</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">ProgressBar</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Time"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> Time</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">ProgressBar</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Fuel"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> Heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Fuel</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">Property</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Altitude"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"%.1f"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> Heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">EndUI</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://cdn.discordapp.com/attachments/1022588581237248060/1087718914886221904/image.png" alt="UI" class="img_ev3q"></p><h1>TO BE CONTINUED...</h1>]]></content:encoded>
            <category>blog</category>
        </item>
        <item>
            <title><![CDATA[Oxylus Engine - Introduction]]></title>
            <link>https://hatrickek.github.io/blog/oxylus-engine-intro</link>
            <guid>https://hatrickek.github.io/blog/oxylus-engine-intro</guid>
            <pubDate>Sun, 15 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[My own engine I have been working on since 2022-06 in my free time. It first started as an OpenGL playground for me to learn graphics and systems programming but then I realised I won't go far with OpenGL and switched my whole engine to Vulkan in a month. And I started working on it more seriously instead of just treating it as a playground. Now it is a fully capable engine with an editor of creating good looking games with the complex renderer using techniques like Tiled Forward Rendering, PBR, PCF Shadows, SSAO, Bloom etc..]]></description>
            <content:encoded><![CDATA[<p>My own engine I have been working on since 2022-06 in my free time. It first started as an OpenGL playground for me to learn graphics and systems programming but then I realised I won't go far with OpenGL and switched my whole engine to Vulkan in a month. And I started working on it more seriously instead of just treating it as a playground. Now it is a fully capable engine with an editor of creating good looking games with the complex renderer using techniques like Tiled Forward Rendering, PBR, PCF Shadows, SSAO, Bloom etc..</p><p><img loading="lazy" alt="Oxylus Editor" src="/assets/images/OxylusEditor-cac71a7350058f3adcbc85dab13ed7c5.png" width="1920" height="1050" class="img_ev3q"></p>]]></content:encoded>
            <category>blog</category>
        </item>
        <item>
            <title><![CDATA[Why I Created This Blog]]></title>
            <link>https://hatrickek.github.io/blog/why-i-created</link>
            <guid>https://hatrickek.github.io/blog/why-i-created</guid>
            <pubDate>Sat, 14 Jan 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Having a personal website is a great way to stay motivated and productive. By regularly updating my website with new blog posts,]]></description>
            <content:encoded><![CDATA[<p>Having a personal website is a great way to stay motivated and productive. By regularly updating my website with new blog posts,
I am able to share my process and techniques with others, which in turn inspires me to work harder and finish projects that I have started.</p><p>Additionally, writing about my work helps me to be more creative and generate new ideas. By documenting my progress and explaining how I implemented certain features,
I'm able to deepen my understanding of that subject matter since writing about it requires more knowledge than just implementing it. And my website could serve as a platform to advertise my future projects, allowing me to share my ideas with a wider audience and reach new heights in my journey.</p>]]></content:encoded>
            <category>blog</category>
        </item>
    </channel>
</rss>