<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hatrickek.github.io/blog</id>
    <title>Hatrickek Blog</title>
    <updated>2023-03-19T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hatrickek.github.io/blog"/>
    <subtitle>Hatrickek Blog</subtitle>
    <icon>https://hatrickek.github.io/img/logo.webp</icon>
    <entry>
        <title type="html"><![CDATA[Creating A Game With Oxylus]]></title>
        <id>https://hatrickek.github.io/blog/oxylus-first-game</id>
        <link href="https://hatrickek.github.io/blog/oxylus-first-game"/>
        <updated>2023-03-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[I have decided to make a game with Oxylus to stress the engine, showcase the current features and find out what features I'm missing and implement them as well.]]></summary>
        <content type="html"><![CDATA[<p>I have decided to make a game with Oxylus to stress the engine, showcase the current features and find out what features I'm missing and implement them as well.</p><p>The game is going to be a <a href="https://en.wikipedia.org/wiki/Cyclone_(video_game)" target="_blank" rel="noopener noreferrer">1985 Cyclone</a> remake in 3D. It looked simple and is enough to showcase almost all features
of the engine.
In this blog post I will show the steps I have taken while making the game so it's going to be something like a tutorial you would read for known engines like Unity, Unreal etc.</p><p>So let us begin...</p><h1>Project</h1><p>Now first thing you will see when you launch the engine is going to be a project selection panel. First row is showing us the recent projects
I have opened and below that buttons to load or create projects with a file dialog.
<img loading="lazy" alt="Project Selector" src="/assets/images/projects-b0b3986283f94cd186bd7383ea934f2a.png" width="1456" height="971" class="img_ev3q"></p><p>Projects in Oxylus is just a yaml file specifying the name, start scene path, and asset directory:</p><div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key atrule">Project</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">Name</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> ProjectCyclone</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">StartScene</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Scenes/Main.oxscene"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">AssetDirectory</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Assets"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h1>Scene</h1><p>Now we need assets to load for our scene. I have found a nice <a href="https://sketchfab.com/3d-models/low-poly-helicopter-5bbed2de9baa4a13a7faa72653b78b64" target="_blank" rel="noopener noreferrer">helicopter model</a>
from sketchfab. You can just download, drag and drop it to the editor. Oxylus will load every mesh and materials then create parented entities according to gltf node.
<img loading="lazy" alt="Scene" src="/assets/images/scene-4f5ced15793fc365d964a742c0b91f70.png" width="1920" height="1048" class="img_ev3q"></p><p>And for now I will use a plane to have a ground. For the ground I will create a material and just make it have a green color. Then drag and drop it to the plane.
<img loading="lazy" alt="Material" src="/assets/images/Material-cc197c929ec15a8296c59330f7da4c0e.gif" width="1911" height="990" class="img_ev3q"></p><h1>Systems</h1><p>When we edit scenes seeing the result directly on runtime is very useful. So for this reason I have created a <code>HotReloadableScene</code> system using Oxylus Systems and Oxylus Event System.</p><p>Systems in Oxylus are inherited from the <code>System</code> interface.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">class</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">System</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">public</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">string Name</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">System</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">default</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">System</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">string name</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Name</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">move</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">~</span><span class="token function" style="color:#e6db74">System</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">default</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnInit</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Scene</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> scene</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnShutdown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">SetDispatcher</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">EventDispatcher</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> m_Dispatcher </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">protected</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  EventDispatcher</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> m_Dispatcher </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">nullptr</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Defining the <code>HotReloadableScene</code> system:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">HotReloadableScenes</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">using</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">namespace</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">filesystem</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">last_write_time</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">m_ScenePath</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">time_since_epoch</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">count</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token operator" style="color:#66d9ef">!=</span><span class="token plain"> m_LastWriteTime</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">time_since_epoch</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">count</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic">//File changed event</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    m_Dispatcher</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token generic-function function" style="color:#e6db74">trigger</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">ReloadSceneEvent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    m_LastWriteTime </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">last_write_time</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">m_ScenePath</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>m_Dispatcher-&gt;trigger&lt;ReloadSceneEvent&gt;();</code> is the way to simply trigger the <code>ReloadSceneEvent</code>. </p><p>System event is listened on the <code>GameLayer</code> with <code>OnAttach</code> callback:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">GameLayer</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnAttach</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">EventDispatcher</span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  dispatcher</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">sink</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">ReloadSceneEvent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">connect</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&amp;</span><span class="token generic-function generic class-name" style="color:#e6db74">GameLayer</span><span class="token generic-function generic class-name double-colon punctuation" style="color:#f8f8f2">::</span><span class="token generic-function generic class-name" style="color:#e6db74">OnSceneReload</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">*</span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">bool</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">GameLayer</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnSceneReload</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">ReloadSceneEvent</span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">LoadScene</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">OX_CORE_INFO</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Scene reloaded."</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Then we add the system to the engine while creating the application:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> app </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ProjectCyclone</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">app</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token function" style="color:#e6db74">PushLayer</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token class-name" style="color:#e6db74">ProjectCyclone</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GameLayer</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">AddSystem</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">HotReloadableScenes</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Assets/Scenes/Main.oxscene"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" alt="HotReloadableScenes" src="/assets/images/HotReloadableScene-ea8864b84a193f928a9de98660364022.gif" width="1856" height="1080" class="img_ev3q"></p><h1>Gameplay</h1><p>Now we can start working on the gameplay part and prove otherwise the famous phrase about engine devs 😛:    </p><blockquote><p>Give someone an engine and they'll make a game. Teach someone to make an engine and they'll never make anything.</p></blockquote><p>I will start with creating a simple helicopter system to move the helicopter. And make the propellers turn around itself.   </p><p>We can either use the <code>ScriptableEntity</code> way or use "raw" ecs. I have picked the raw ecs way since we don't need any callbacks
from the <code>ScriptableEntity</code> api.    </p><p>The component that will be added on helicopter entity.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">struct</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">HeliComponent</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> Speed </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">5.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> Fuel </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic">//1.0f = Full, 0.0f = Empty</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> Altitude </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>By using the same way we have declared an engine system in the last section we now declare a system for the Helicopter entites.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">HeliSystem</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Scene</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> scene</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token plain"> registery </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token plain">m_Registry</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> view </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> registery</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">view</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> entity </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> view</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> view</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">get</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">entity</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//Move horizontal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token class-name" style="color:#e6db74">Input</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetKeyDown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Key</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">W</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Speed </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Timestep</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetDeltaTime</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//Other keys</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//Move vertical</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token class-name" style="color:#e6db74">Input</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetKeyDown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Key</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">Q</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude </span><span class="token operator" style="color:#66d9ef">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.2f</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">-=</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Speed </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Timestep</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetDeltaTime</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token class-name" style="color:#e6db74">Input</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetKeyDown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Key</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">E</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">8.0f</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Speed </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Timestep</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetDeltaTime</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Fuel </span><span class="token operator" style="color:#66d9ef">-=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.1f</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">ImGui</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetIO</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">DeltaTime</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For rotating the propeller just getting the transform component and adding a constant value to y rotation would work for now. </p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> ent </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> Oxylus</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">Entity </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> entity</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> m_Scene</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">get</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">ent</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">GetChild</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">GetComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">Oxylus</span><span class="token generic-function generic class-name double-colon punctuation" style="color:#f8f8f2">::</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Rotation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">5.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Other gameplay element we could add is picking up crates from ground.<br>
<!-- -->Same way we have crated the heli system now we can create a system for crates.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> heliView </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token plain">m_Registry</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">view</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> crateView </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token plain">m_Registry</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">view</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> CrateComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> entity </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> crateView</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> crate</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> crateView</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">get</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> CrateComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">entity</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic">//a simple intersection check</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">constexpr</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> axisThreshold </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.5f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> heliEntity </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> heliView</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">heliTransform</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> heliView</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">get</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">heliEntity</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">abs</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">x </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> heliTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> axisThreshold</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">abs</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.2f</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> heliTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> axisThreshold</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">abs</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> heliTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> axisThreshold</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">CratesTaken </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> ent </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> Entity</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain">entity</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> scene</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token function" style="color:#e6db74">DestroyEntity</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">ent</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">break</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://cdn.discordapp.com/attachments/1022588581237248060/1088469165813268510/crates.gif" alt="Crates" class="img_ev3q"></p><h1>UI</h1><p>For creating a game UI we can use <code>OxUI</code> api which uses Dear ImGui underneath for drawing and layouts.
Cyclone has a HUD that contains instrumentation which includes speed, altitude, fuel remaining and time remaining.
Additionally there is also information on the number of supply crates, whether the player's current view is North
or South, information on wind force and a warning to the player of the cyclone's proximity and any approaching planes.<br>
<!-- -->For now I will just display altitude, remaining fuel and time.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">BeginUI</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">ProgressBar</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Time"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> Time</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">ProgressBar</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Fuel"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> Heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Fuel</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">Property</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Altitude"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"%.1f"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> Heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">EndUI</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://cdn.discordapp.com/attachments/1022588581237248060/1087718914886221904/image.png" alt="UI" class="img_ev3q"></p><h1>TO BE CONTINUED...</h1>]]></content>
        <author>
            <name>Hatrickek</name>
            <uri>https://github.com/Hatrickek</uri>
        </author>
        <category label="blog" term="blog"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Oxylus Engine - Introduction]]></title>
        <id>https://hatrickek.github.io/blog/oxylus-engine-intro</id>
        <link href="https://hatrickek.github.io/blog/oxylus-engine-intro"/>
        <updated>2023-01-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[My own engine I have been working on since 2022-06 in my free time. It first started as an OpenGL playground for me to learn graphics and systems programming but then I realised I won't go far with OpenGL and switched my whole engine to Vulkan in a month. And I started working on it more seriously instead of just treating it as a playground. Now it is a fully capable engine with an editor of creating good looking games with the complex renderer using techniques like Tiled Forward Rendering, PBR, PCF Shadows, SSAO, Bloom etc..]]></summary>
        <content type="html"><![CDATA[<p>My own engine I have been working on since 2022-06 in my free time. It first started as an OpenGL playground for me to learn graphics and systems programming but then I realised I won't go far with OpenGL and switched my whole engine to Vulkan in a month. And I started working on it more seriously instead of just treating it as a playground. Now it is a fully capable engine with an editor of creating good looking games with the complex renderer using techniques like Tiled Forward Rendering, PBR, PCF Shadows, SSAO, Bloom etc..</p><p><img loading="lazy" alt="Oxylus Editor" src="/assets/images/OxylusEditor-cac71a7350058f3adcbc85dab13ed7c5.png" width="1920" height="1050" class="img_ev3q"></p>]]></content>
        <author>
            <name>Hatrickek</name>
            <uri>https://github.com/Hatrickek</uri>
        </author>
        <category label="blog" term="blog"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why I Created This Blog]]></title>
        <id>https://hatrickek.github.io/blog/why-i-created</id>
        <link href="https://hatrickek.github.io/blog/why-i-created"/>
        <updated>2023-01-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Having a personal website is a great way to stay motivated and productive. By regularly updating my website with new blog posts,]]></summary>
        <content type="html"><![CDATA[<p>Having a personal website is a great way to stay motivated and productive. By regularly updating my website with new blog posts,
I am able to share my process and techniques with others, which in turn inspires me to work harder and finish projects that I have started.</p><p>Additionally, writing about my work helps me to be more creative and generate new ideas. By documenting my progress and explaining how I implemented certain features,
I'm able to deepen my understanding of that subject matter since writing about it requires more knowledge than just implementing it. And my website could serve as a platform to advertise my future projects, allowing me to share my ideas with a wider audience and reach new heights in my journey.</p>]]></content>
        <author>
            <name>Hatrickek</name>
            <uri>https://github.com/Hatrickek</uri>
        </author>
        <category label="blog" term="blog"/>
    </entry>
</feed>