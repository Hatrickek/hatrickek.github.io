<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hatrickek.github.io/blog</id>
    <title>Hatrickek Blog</title>
    <updated>2023-03-29T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hatrickek.github.io/blog"/>
    <subtitle>Hatrickek Blog</subtitle>
    <icon>https://hatrickek.github.io/img/logo.webp</icon>
    <entry>
        <title type="html"><![CDATA[Porting Oxylus To MacOS]]></title>
        <id>https://hatrickek.github.io/blog/oxylus-mac-port</id>
        <link href="https://hatrickek.github.io/blog/oxylus-mac-port"/>
        <updated>2023-03-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[My Russian friend Yugin had a brilliant idea in the middle of the night. His plan was to build Oxylus on his MacBook in order to see how many errors and problems he would encounter or if the build would go smoothly.]]></summary>
        <content type="html"><![CDATA[<p>My Russian friend Yugin had a brilliant idea in the middle of the night. His plan was to build Oxylus on his MacBook in order to see how many errors and problems he would encounter or if the build would go smoothly.<br>
<!-- -->Oh boy, were we clueless as hell.</p><blockquote><p>Oh and if you think modern C++ is cross platform or just like to use the "modern" std features it has, this blog might change your thoughts on those topics ðŸ˜…. <a href="https://gist.github.com/bkaradzic/2e39896bc7d8c34e042b" target="_blank" rel="noopener noreferrer">Also that</a>.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="dependencies">Dependencies<a href="#dependencies" class="hash-link" aria-label="Direct link to Dependencies" title="Direct link to Dependencies">â€‹</a></h2><p>He cloned the repository and tried to build it, but encountered the first problem with dependencies. Managing dependencies in C++ is disliked by everyone, and writing CMake scripts to manage them is not a favorite task. However, some people have created alternatives like <a href="https://premake.github.io/" target="_blank" rel="noopener noreferrer">Premake</a>, which uses Lua and simple syntax to make it easier. I used Premake until I considered porting Oxylus to Mac, at which point I stopped using it because it was limiting users to specific tools (i.e., Visual Studio on Windows or XCode on Mac), which were not preferred. Instead, I rewrote my old CMake scripts and added small dependencies as submodules, which automated the build process. Using this approach, these modules were easily buildable as cross-platform (at least for Mac and Windows).
I rewrote my old CMake scripts, added the small dependencies as submodules, and automated the build process. This way, the modules were easily buildable as cross-platform for at least Mac and Windows.<br>
<!-- -->I had a couple more dependencies to add as submodules: PhysX, KTX, and Vulkan. However, PhysX was a very challenging library to manage, so I decided to abandon it altogether and switch to <a href="https://github.com/jrouwe/JoltPhysics" target="_blank" rel="noopener noreferrer">Jolt</a> in the future. <a href="https://github.com/KhronosGroup/KTX-Software" target="_blank" rel="noopener noreferrer">KTX</a> had a similar issue; the repository contained six different projects, making it difficult to add as a submodule. Yugin suggested a solution where we could download the repository as a shallow zip copy and extract it into the vendor directory. This worked perfectly and left me with just one last dependency to make cross-platform: Vulkan. Luckily, it was the easiest to build since CMake already had functions specifically for Vulkan, such as <a href="https://cmake.org/cmake/help/latest/module/FindVulkan.html" target="_blank" rel="noopener noreferrer">FindVulkan</a>.<br>
<!-- -->Now the project was in theory ready to build on all platforms.<br>
<!-- -->Surely these were the only problems, right?</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="modern-c">Modern C++<a href="#modern-c" class="hash-link" aria-label="Direct link to Modern C++" title="Direct link to Modern C++">â€‹</a></h2><p>Well, I could only dream... The first error he encountered was related to the use of the not-so-modern std function <code>std::ranges</code>. Now seeing this made me question, how that was an issue. After a quick 2-minute Google search, I discovered that it wasn't even <a href="https://developer.apple.com/forums/thread/719896" target="_blank" rel="noopener noreferrer">supported on mac clang</a>! Luckily, I hadn't used it extensively, so I rewrote the code that I had written using it, such as i.e. <code>ranges::view</code>, <code>ranges::find_if</code> etc.<br>
<!-- -->The next problem was similar. Now it was from <code>std::views</code>! Again <a href="https://stackoverflow.com/questions/73628848/is-the-stdviews-namespace-not-available-in-xcodes-c?rq=1" target="_blank" rel="noopener noreferrer">the same issue</a>. I had to rewrite the code I have written with it, but I thought that would be the end of it. Surely the standard library wasn't that anti-cross-platform? Well you would be wrong.<br>
<!-- -->I encountered the infamous <code>std::format</code> as my next enemy. After another quick Google search, I discovered that it was a big problem for other platforms as well, and that people had already created a much better alternative called <a href="https://github.com/fmtlib/fmt" target="_blank" rel="noopener noreferrer">fmt</a>. Therefore, I had to add another dependency to my project for a feature that already existed in the standard library but was still not cross-platform even after two years since its release. How NICE!
These were all the problems I had with the standard library. Thankfully, I didn't go crazy with modern C++ otherwise, I'm sure this list would have had gone a lot longer.</p><p>My next and final challenge was Vulkan. Since Vulkan is relatively cross-platform and has verbose error messages, it was relatively easy to run it on Mac with the MoltenVK layer. I had to enable a few layers and extensions, and then it should have worked... right? Unfortunately, I encountered a timeout error on some command buffer submission in MoltenVK. After some investigation, I discovered that I had forgotten to remove some semaphores in my composite pipeline. Once I removed them, it finally worked! However, it took a few sleepless nights and taught me a valuable lesson...</p><p><img loading="lazy" src="https://cdn.discordapp.com/attachments/1022588581237248060/1090745806765699242/Annotation_2023-03-29_235941.png" alt="Result" class="img_ev3q"></p>]]></content>
        <author>
            <name>Hatrickek</name>
            <uri>https://github.com/Hatrickek</uri>
        </author>
        <category label="blog" term="blog"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Creating A Game With Oxylus]]></title>
        <id>https://hatrickek.github.io/blog/oxylus-first-game</id>
        <link href="https://hatrickek.github.io/blog/oxylus-first-game"/>
        <updated>2023-03-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[For the purpose of testing Oxylus' capabilities and identifying any missing features, I have decided to make a game using the engine. This project will serve as a stress test to see how well the engine can handle complex gameplay scenarios, while also providing an opportunity to showcase its current features. Furthermore, while working on the game, I'll be able to spot any features that are missing or need improvement. This way, I can add them to the engine and make it even better!]]></summary>
        <content type="html"><![CDATA[<p>For the purpose of testing Oxylus' capabilities and identifying any missing features, I have decided to make a game using the engine. This project will serve as a stress test to see how well the engine can handle complex gameplay scenarios, while also providing an opportunity to showcase its current features. Furthermore, while working on the game, I'll be able to spot any features that are missing or need improvement. This way, I can add them to the engine and make it even better!</p><p>The game I chose to remake in 3D is <a href="https://en.wikipedia.org/wiki/Cyclone_(video_game)" target="_blank" rel="noopener noreferrer">1985 Cyclone</a>. It looked simple and is enough to showcase almost all features of the engine.</p><p>In this blog post I will show the steps I took to create the game, similar to a tutorial you might find for popular engines like Unity, Unreal or etc.</p><p>So let us begin...</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="project">Project<a href="#project" class="hash-link" aria-label="Direct link to Project" title="Direct link to Project">â€‹</a></h2><p>The project selection panel is the first thing you will see when launching the engine. The top rows displays recent projects that have been opened, and below that are buttons to load or create projects with a file dialog.
<img loading="lazy" alt="Project Selector" src="/assets/images/projects-b0b3986283f94cd186bd7383ea934f2a.png" width="1456" height="971" class="img_ev3q"></p><p>In Oxylus, a project is simply a YAML file that specifies the project name, starting scene path, and asset directory:</p><div class="language-yml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token key atrule">Project</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">Name</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> ProjectCyclone</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">StartScene</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Scenes/Main.oxscene"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token key atrule">AssetDirectory</span><span class="token punctuation" style="color:#f8f8f2">:</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"Assets"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="scene">Scene<a href="#scene" class="hash-link" aria-label="Direct link to Scene" title="Direct link to Scene">â€‹</a></h2><p>First of all, we need assets to load for our scene. I found a nice <a href="https://sketchfab.com/3d-models/low-poly-helicopter-5bbed2de9baa4a13a7faa72653b78b64" target="_blank" rel="noopener noreferrer">helicopter model</a>
from Sketchfab. To import assets into Oxylus, simply download the asset and drag and drop it into the editor. Oxylus will automatically load all meshes and materials and create parented entities based on the glTF node hierarchy.
<img loading="lazy" alt="Scene" src="/assets/images/scene-4f5ced15793fc365d964a742c0b91f70.png" width="1920" height="1048" class="img_ev3q"></p><p>To create ground in the game, I used a plane and applied a green material to it. I created the material first, then simply draged and dropped it onto the plane in the editor.
<img loading="lazy" alt="Material" src="/assets/images/Material-cc197c929ec15a8296c59330f7da4c0e.gif" width="1911" height="990" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="systems">Systems<a href="#systems" class="hash-link" aria-label="Direct link to Systems" title="Direct link to Systems">â€‹</a></h2><p>One of the most useful features of editing scenes in Oxylus is the ability to see the results immediately during runtime. To achieve this, I implemented the <code>HotReloadableScene</code> system using the Oxylus Systems and Event System. With <code>HotReloadableScene</code>, you can make changes to a scene and see the changes take effect in real-time, making the editing process much faster and more efficient.</p><p>Systems in Oxylus are inherited from the <code>System</code> interface.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">class</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">System</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">public</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">string Name</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">System</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">default</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">System</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">string name</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">Name</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">move</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">name</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">~</span><span class="token function" style="color:#e6db74">System</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">default</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnInit</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Scene</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> scene</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">virtual</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">OnShutdown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">SetDispatcher</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">EventDispatcher</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> m_Dispatcher </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">protected</span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  EventDispatcher</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> m_Dispatcher </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">nullptr</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Defining the <code>HotReloadableScene</code> system:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">HotReloadableScenes</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">using</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">namespace</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">filesystem</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token function" style="color:#e6db74">last_write_time</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">m_ScenePath</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">time_since_epoch</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">count</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token operator" style="color:#66d9ef">!=</span><span class="token plain"> m_LastWriteTime</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">time_since_epoch</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">count</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token comment" style="color:#8292a2;font-style:italic">//File changed event</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    m_Dispatcher</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token generic-function function" style="color:#e6db74">trigger</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">ReloadSceneEvent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    m_LastWriteTime </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">last_write_time</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">m_ScenePath</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><code>m_Dispatcher-&gt;trigger&lt;ReloadSceneEvent&gt;();</code> is the way to simply trigger the <code>ReloadSceneEvent</code>.</p><p>The <code>OnAttach</code> callback on the <code>GameLayer</code> listens for the system event:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">GameLayer</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnAttach</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">EventDispatcher</span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token plain"> dispatcher</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  dispatcher</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">sink</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">ReloadSceneEvent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">connect</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&amp;</span><span class="token generic-function generic class-name" style="color:#e6db74">GameLayer</span><span class="token generic-function generic class-name double-colon punctuation" style="color:#f8f8f2">::</span><span class="token generic-function generic class-name" style="color:#e6db74">OnSceneReload</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token operator" style="color:#66d9ef">*</span><span class="token keyword" style="color:#66d9ef">this</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">bool</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">GameLayer</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnSceneReload</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">ReloadSceneEvent</span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">LoadScene</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token function" style="color:#e6db74">OX_CORE_INFO</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Scene reloaded."</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">return</span><span class="token plain"> </span><span class="token boolean" style="color:#ae81ff">true</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Next, we add the system to the engine during the application creation process:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> app </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token function" style="color:#e6db74">ProjectCyclone</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">spec</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">app</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token function" style="color:#e6db74">PushLayer</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">new</span><span class="token plain"> </span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token class-name" style="color:#e6db74">ProjectCyclone</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GameLayer</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">AddSystem</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">HotReloadableScenes</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Assets/Scenes/Main.oxscene"</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" alt="HotReloadableScenes" src="/assets/images/HotReloadableScene-ea8864b84a193f928a9de98660364022.gif" width="1856" height="1080" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="gameplay">Gameplay<a href="#gameplay" class="hash-link" aria-label="Direct link to Gameplay" title="Direct link to Gameplay">â€‹</a></h2><p>Now we can move onto the fun part of game development and prove wrong the infamous phrase about engine developers ðŸ˜›:</p><blockquote><p>Give someone an engine and they'll make a game. Teach someone to make an engine and they'll never make anything.</p></blockquote><p>I started by creating a simple helicopter system to move the helicopter and make the propellers turn around itself.</p><p>We could have used the <code>ScriptableEntity</code> approach, but instead, I opted for the "raw" ECS method as I did not require any callbacks from the <code>ScriptableEntity</code> API.</p><p>The component that will be added on helicopter entity:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">struct</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">HeliComponent</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> Speed </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">5.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> Fuel </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic">//1.0f = Full, 0.0f = Empty</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> Altitude </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Using the same method as we used to declare the engine system in the previous section, we can now declare a system for the Helicopter entities.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">void</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">HeliSystem</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">OnUpdate</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Scene</span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> scene</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;</span><span class="token plain"> registery </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token plain">m_Registry</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> view </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> registery</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">view</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> entity </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> view</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> view</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">get</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">entity</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//Move horizontal</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token class-name" style="color:#e6db74">Input</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetKeyDown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Key</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">W</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Speed </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Timestep</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetDeltaTime</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//Other keys</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token comment" style="color:#8292a2;font-style:italic">//Move vertical</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token class-name" style="color:#e6db74">Input</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetKeyDown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Key</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">Q</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude </span><span class="token operator" style="color:#66d9ef">&gt;=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.2f</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">-=</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Speed </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Timestep</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetDeltaTime</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">else</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token class-name" style="color:#e6db74">Input</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetKeyDown</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">Key</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">E</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">8.0f</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Speed </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Timestep</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetDeltaTime</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Fuel </span><span class="token operator" style="color:#66d9ef">-=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.1f</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">*</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">ImGui</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetIO</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">DeltaTime</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>For rotating the propeller just getting the transform component and adding a constant value to <code>y</code> rotation should work for now.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> ent </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> Oxylus</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token plain">Entity </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"> entity</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> m_Scene</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">get</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">ent</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token function" style="color:#e6db74">GetChild</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">GetComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">Oxylus</span><span class="token generic-function generic class-name double-colon punctuation" style="color:#f8f8f2">::</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Rotation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">5.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Other gameplay elements that could be added include picking up crates from the ground. Similar to how we created the helicopter system, we can now create a system for the crates.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> heliView </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token plain">m_Registry</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">view</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> crateView </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token plain">m_Registry</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">view</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> CrateComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> entity </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> crateView</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> crate</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> crateView</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">get</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> CrateComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">entity</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> ent </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> Entity</span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain">entity</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> scene</span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">constexpr</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">float</span><span class="token plain"> axisThreshold </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.5f</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token comment" style="color:#8292a2;font-style:italic">//a simple intersection check</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token keyword" style="color:#66d9ef">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token keyword" style="color:#66d9ef">const</span><span class="token plain"> </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token plain"> heliEntity </span><span class="token operator" style="color:#66d9ef">:</span><span class="token plain"> heliView</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">auto</span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">[</span><span class="token plain">heliTransform</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> heli</span><span class="token punctuation" style="color:#f8f8f2">]</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> heliView</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token generic-function function" style="color:#e6db74">get</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&lt;</span><span class="token generic-function generic class-name" style="color:#e6db74">TransformComponent</span><span class="token generic-function generic class-name punctuation" style="color:#f8f8f2">,</span><span class="token generic-function generic class-name" style="color:#e6db74"> HeliComponent</span><span class="token generic-function generic class-name operator" style="color:#66d9ef">&gt;</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">heliEntity</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token keyword" style="color:#66d9ef">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">abs</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">x </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> heliTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> axisThreshold</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">abs</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">0.2f</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> heliTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">y</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> axisThreshold</span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">        </span><span class="token operator" style="color:#66d9ef">&amp;&amp;</span><span class="token plain"> std</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">abs</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">transform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z </span><span class="token operator" style="color:#66d9ef">-</span><span class="token plain"> heliTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token operator" style="color:#66d9ef">&lt;</span><span class="token plain"> axisThreshold</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#f8f8f2">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">CratesTaken </span><span class="token operator" style="color:#66d9ef">+=</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">1</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      scene</span><span class="token operator" style="color:#66d9ef">-&gt;</span><span class="token function" style="color:#e6db74">DestroyEntity</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">ent</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">      </span><span class="token keyword" style="color:#66d9ef">break</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">    </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">  </span><span class="token punctuation" style="color:#f8f8f2">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token punctuation" style="color:#f8f8f2">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://cdn.discordapp.com/attachments/1022588581237248060/1088469165813268510/crates.gif" alt="Crates" class="img_ev3q"></p><p>As you may have noticed, the camera is currently static. Since the player will be moving around frequently, we want to ensure that the helicopter remains in focus. Simply snapping the camera to a predefined position whenever the player moves would not look good. Therefore, we can utilize the <code>OxMath</code> API to create a camera system with smooth damping that produces more visually pleasing result.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token plain">m_LastCameraPosition </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> </span><span class="token class-name" style="color:#e6db74">Math</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">SmoothDamp</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">m_LastCameraPosition</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                                        heliTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                                        m_TranslationVelocity</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                                        TranslationDampening</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                                        </span><span class="token number" style="color:#ae81ff">10000.0f</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">                                        </span><span class="token class-name" style="color:#e6db74">Timestep</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">GetDeltaTime</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">cameraTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">x </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> m_LastCameraPosition</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">x</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain">cameraTransform</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Translation</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z </span><span class="token operator" style="color:#66d9ef">=</span><span class="token plain"> m_LastCameraPosition</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">z </span><span class="token operator" style="color:#66d9ef">+</span><span class="token plain"> </span><span class="token number" style="color:#ae81ff">12.0f</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://cdn.discordapp.com/attachments/1022588581237248060/1090994911869943898/smoothcam.gif" alt="SmootCam" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ui">UI<a href="#ui" class="hash-link" aria-label="Direct link to UI" title="Direct link to UI">â€‹</a></h2><p>To create the game UI, we can use the <code>OxUI</code> API which is built on top of <code>Dear ImGui</code> for drawing and layouts. In Cyclone, we need a HUD that displays instrumentation such as speed, altitude, fuel remaining and time remaining. We'll also show the number of supply crates, the player's current view direction, wind force, and a warning about the cyclone's proximity and any approaching planes. For simplicity, we'll start with showing altitude, remaining fuel, and time.</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">BeginUI</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">ProgressBar</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Time"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> Time</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">ProgressBar</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Fuel"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> Heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Fuel</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">Property</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token string" style="color:#a6e22e">"Altitude"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> </span><span class="token string" style="color:#a6e22e">"%.1f"</span><span class="token punctuation" style="color:#f8f8f2">,</span><span class="token plain"> Heli</span><span class="token punctuation" style="color:#f8f8f2">.</span><span class="token plain">Altitude</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#f8f8f2"><span class="token plain"></span><span class="token class-name" style="color:#e6db74">OxUI</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">EndUI</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://cdn.discordapp.com/attachments/1022588581237248060/1087718914886221904/image.png" alt="UI" class="img_ev3q"></p><p>To keep track of the collected crates, we can simply use glyphs as icons in a row:</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#f8f8f2;--prism-background-color:#272822"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#f8f8f2"><span class="token class-name" style="color:#e6db74">ImGui</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">Text</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token class-name" style="color:#e6db74">StringUtils</span><span class="token double-colon punctuation" style="color:#f8f8f2">::</span><span class="token function" style="color:#e6db74">FromChar8T</span><span class="token punctuation" style="color:#f8f8f2">(</span><span class="token plain">ICON_MDI_CUBE</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">)</span><span class="token punctuation" style="color:#f8f8f2">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" src="https://cdn.discordapp.com/attachments/1022588581237248060/1090992608567894056/Annotation_2023-03-30_163445.png" alt="CratesUI" class="img_ev3q"></p><h1>TO BE CONTINUED...</h1>]]></content>
        <author>
            <name>Hatrickek</name>
            <uri>https://github.com/Hatrickek</uri>
        </author>
        <category label="blog" term="blog"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Oxylus Engine - Introduction]]></title>
        <id>https://hatrickek.github.io/blog/oxylus-engine-intro</id>
        <link href="https://hatrickek.github.io/blog/oxylus-engine-intro"/>
        <updated>2023-01-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[My own engine I have been working on since 2022-06 in my free time. It first started as an OpenGL playground for me to learn graphics and systems programming but then I realised I won't go far with OpenGL and switched my whole engine to Vulkan in a month. And I started working on it more seriously instead of just treating it as a playground. Now it is a fully capable engine with an editor of creating good looking games with the complex renderer using techniques like Tiled Forward Rendering, PBR, PCF Shadows, SSAO, Bloom etc..]]></summary>
        <content type="html"><![CDATA[<p>My own engine I have been working on since 2022-06 in my free time. It first started as an OpenGL playground for me to learn graphics and systems programming but then I realised I won't go far with OpenGL and switched my whole engine to Vulkan in a month. And I started working on it more seriously instead of just treating it as a playground. Now it is a fully capable engine with an editor of creating good looking games with the complex renderer using techniques like Tiled Forward Rendering, PBR, PCF Shadows, SSAO, Bloom etc..</p><p><img loading="lazy" alt="Oxylus Editor" src="/assets/images/OxylusEditor-cac71a7350058f3adcbc85dab13ed7c5.png" width="1920" height="1050" class="img_ev3q"></p>]]></content>
        <author>
            <name>Hatrickek</name>
            <uri>https://github.com/Hatrickek</uri>
        </author>
        <category label="blog" term="blog"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Why I Created This Blog]]></title>
        <id>https://hatrickek.github.io/blog/why-i-created</id>
        <link href="https://hatrickek.github.io/blog/why-i-created"/>
        <updated>2023-01-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Having a personal website is a great way to stay motivated and productive. By regularly updating my website with new blog posts,]]></summary>
        <content type="html"><![CDATA[<p>Having a personal website is a great way to stay motivated and productive. By regularly updating my website with new blog posts,
I am able to share my process and techniques with others, which in turn inspires me to work harder and finish projects that I have started.</p><p>Additionally, writing about my work helps me to be more creative and generate new ideas. By documenting my progress and explaining how I implemented certain features, I'm able to deepen my understanding of that subject matter since writing about it requires more knowledge than just implementing it. And my website could serve as a platform to advertise my future projects, allowing me to share my ideas with a wider audience and reach new heights in my journey.</p>]]></content>
        <author>
            <name>Hatrickek</name>
            <uri>https://github.com/Hatrickek</uri>
        </author>
        <category label="blog" term="blog"/>
    </entry>
</feed>